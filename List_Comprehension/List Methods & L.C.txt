List Methods:


list[index] = x - Replaces the element at index [n] with x.

list.append(x) - Appends x to the end of the list.

list.insert(index, x) - Inserts x at index position [index].

list.pop(index) - Returns the element at [index] and removes it from the list. If [index] position is not in the list, the last element in the list is returned and removed.

list.remove(x) - Removes the first occurrence of x in the list.

list.sort() - Sorts the items in the list.

list.reverse() - Reverses the order of items of the list.

list.clear() - Deletes all items in the list.

list.copy() - Creates a copy of the list.

list.extend(other_list) - Appends all the elements of other_list at the end oflist



List Comprehensions:
    A list comprehension is an efficient method for creating a new list from a sequence or a range in a single line of code.


=> [expression for variable in sequence] - Creates a new list based on the given sequence. Each element in the new list is the result of the given expression.

      Example: my_list = [ x*2 for x in range(1,11) ]

=> [expression for variable in sequence if condition] - Creates a new list based on a specified sequence. Each element is the result of the given expression; elements are added only if the specified condition is true. 

      Example: my_list = [ x for x in range(1,101) if x % 10 == 0 ]
   
